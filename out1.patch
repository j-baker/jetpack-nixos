--- a/src/jetson_mount.c
+++ b/src/jetson_mount.c
@@ -36,6 +36,7 @@ resolve_symlink(struct error *err, const char *src, char *dst)
 char **
 mount_jetson_files(struct error *err, const char *root, const struct nvc_container *cnt, char *paths[], size_t size)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char src[PATH_MAX];
         char dst[PATH_MAX];
         mode_t mode;
@@ -50,7 +51,7 @@ mount_jetson_files(struct error *err, const char *root, const struct nvc_contain
                     !match_jetson_directory_flags(paths[i], cnt->flags))
                         continue;
 
-                if (path_new(err, src, root) < 0)
+                if (path_new(err, src, nixos_base) < 0)
                         goto fail;
                 if (path_new(err, dst, cnt->cfg.rootfs) < 0)
                         goto fail;
@@ -86,6 +87,7 @@ mount_jetson_files(struct error *err, const char *root, const struct nvc_contain
 int
 create_jetson_symlinks(struct error *err, const char *root, const struct nvc_container *cnt, char *paths[], size_t size)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char src[PATH_MAX];
         char src_lnk[PATH_MAX];
         char dst[PATH_MAX];
@@ -94,7 +96,7 @@ create_jetson_symlinks(struct error *err, const char *root, const struct nvc_con
                 if (!match_jetson_symlink_flags(paths[i], cnt->flags))
                         continue;
 
-                if (path_new(err, src, root) < 0)
+                if (path_new(err, src, nixos_base) < 0)
                         return (-1);
                 if (path_new(err, dst, cnt->cfg.rootfs) < 0)
                         return (-1);
--- a/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -404,16 +404,17 @@ lookup_ipcs(struct error *err, struct nvc_driver_info *info, const char *root, i
 static int
 lookup_jetson_libs(struct error *err, struct nvc_jetson_info *info, const char *root)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char path[PATH_MAX];
 
         for (size_t i = 0; i < info->nlibs; ++i) {
-                if (path_resolve(err, path, root, info->libs[i]) < 0)
+                if (path_resolve(err, path, nixos_base, info->libs[i]) < 0)
                         return (-1);
 
                 free(info->libs[i]);
                 info->libs[i] = NULL;
 
-                if (select_libraries(err, info, root, NULL, path) < 0) {
+                if (select_libraries(err, info, nixos_base, NULL, path) < 0) {
                         log_infof("missing library %s", path);
                         continue;
                 }
@@ -431,11 +432,12 @@ lookup_jetson_libs(struct error *err, struct nvc_jetson_info *info, const char *
 static int
 lookup_jetson_dirs(struct error *err, struct nvc_jetson_info *info, const char *root)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char path[PATH_MAX];
         struct stat s;
 
         for (size_t i = 0; i < info->ndirs; ++i) {
-                if (path_resolve(err, path, root, info->dirs[i]) < 0)
+                if (path_resolve(err, path, nixos_base, info->dirs[i]) < 0)
                         return (-1);
 
                 free(info->dirs[i]);
