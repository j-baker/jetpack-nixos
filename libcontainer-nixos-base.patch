--- a/src/jetson_mount.c
+++ b/src/jetson_mount.c
@@ -36,6 +36,7 @@ resolve_symlink(struct error *err, const char *src, char *dst)
 char **
 mount_jetson_files(struct error *err, const char *root, const struct nvc_container *cnt, char *paths[], size_t size)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char src[PATH_MAX];
         char dst[PATH_MAX];
         mode_t mode;
@@ -50,7 +51,7 @@ mount_jetson_files(struct error *err, const char *root, const struct nvc_contain
                     !match_jetson_directory_flags(paths[i], cnt->flags))
                         continue;
 
-                if (path_new(err, src, root) < 0)
+                if (path_new(err, src, nixos_base) < 0)
                         goto fail;
                 if (path_new(err, dst, cnt->cfg.rootfs) < 0)
                         goto fail;
@@ -86,6 +87,7 @@ mount_jetson_files(struct error *err, const char *root, const struct nvc_contain
 int
 create_jetson_symlinks(struct error *err, const char *root, const struct nvc_container *cnt, char *paths[], size_t size)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char src[PATH_MAX];
         char src_lnk[PATH_MAX];
         char dst[PATH_MAX];
@@ -94,7 +96,7 @@ create_jetson_symlinks(struct error *err, const char *root, const struct nvc_con
                 if (!match_jetson_symlink_flags(paths[i], cnt->flags))
                         continue;
 
-                if (path_new(err, src, root) < 0)
+                if (path_new(err, src, nixos_base) < 0)
                         return (-1);
                 if (path_new(err, dst, cnt->cfg.rootfs) < 0)
                         return (-1);
--- b/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -404,16 +404,17 @@
 static int
 lookup_jetson_libs(struct error *err, struct nvc_jetson_info *info, const char *root)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char path[PATH_MAX];
 
         for (size_t i = 0; i < info->nlibs; ++i) {
-                if (path_resolve(err, path, root, info->libs[i]) < 0)
+                if (path_resolve(err, path, nixos_base, info->libs[i]) < 0)
                         return (-1);
 
                 free(info->libs[i]);
                 info->libs[i] = NULL;
 
-                if (select_libraries(err, info, root, NULL, path) < 0) {
+                if (select_libraries(err, info, nixos_base, NULL, path) < 0) {
                         log_infof("missing library %s", path);
                         continue;
                 }
@@ -431,11 +432,12 @@
 static int
 lookup_jetson_dirs(struct error *err, struct nvc_jetson_info *info, const char *root)
 {
+        const char *nixos_base = "NIXOS_BASE";
         char path[PATH_MAX];
         struct stat s;
 
         for (size_t i = 0; i < info->ndirs; ++i) {
-                if (path_resolve(err, path, root, info->dirs[i]) < 0)
+                if (path_resolve(err, path, nixos_base, info->dirs[i]) < 0)
                         return (-1);
 
                 free(info->dirs[i]);
@@ -551,6 +553,7 @@
 static int
 lookup_jetson(struct error *err, struct nvc_driver_info *info, const char *root)
 {
+        const char *nixos_base = "NIXOS_BASE";
         const char *base = "/etc/nvidia-container-runtime/host-files-for-container.d";
         struct jetson_csv_file_info *file_info = NULL;
         struct nvc_jetson_info *dst = NULL, *tmp = NULL;
@@ -575,7 +578,7 @@
                 if ((file_info->path = xstrdup(err, files[i])) == NULL)
                         goto fail;
 
-                if (parse_file(err, files[i], root, &file_info->info) < 0)
+                if (parse_file(err, files[i], nixos_base, &file_info->info) < 0)
                         goto fail;
 
                 if ((tmp = jetson_info_append(err, &file_info->info, dst)) == NULL)
--- a/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -42,7 +42,7 @@ static int lookup_binaries(struct error *, struct nvc_driver_info *, const char
 static int lookup_ipcs(struct error *, struct nvc_driver_info *, const char *, int32_t);
 
 static int lookup_jetson(struct error *, struct nvc_driver_info *, const char *);
-static int parse_file(struct error *, const char *, const char *, struct nvc_jetson_info *);
+static int parse_file(struct error *, const char *, const char *, const char *, struct nvc_jetson_info *);
 static int lookup_jetson_devices(struct error *, struct nvc_jetson_info *, const char *);
 static int lookup_jetson_dirs(struct error *, struct nvc_jetson_info *, const char *);
 static int lookup_jetson_libs(struct error *, struct nvc_jetson_info *, const char *);
@@ -515,7 +515,7 @@ lookup_jetson_devices(struct error *err, struct nvc_jetson_info *info, const cha
 }
 
 static int
-parse_file(struct error *err, const char *path, const char *root, struct nvc_jetson_info *jetson)
+parse_file(struct error *err, const char *path, const char *root, const char *nixos_root, struct nvc_jetson_info *jetson)
 {
         struct csv ctx;
         int rv = -1;
@@ -530,17 +530,17 @@ parse_file(struct error *err, const char *path, const char *root, struct nvc_jet
         if (csv_parse(&ctx, jetson) < 0)
                 goto fail;
 
-        if (lookup_jetson_libs(err, jetson, root) < 0)
+        if (lookup_jetson_libs(err, jetson, nixos_root) < 0)
                 goto fail;
 
-        if (lookup_jetson_dirs(err, jetson, root) < 0)
+        if (lookup_jetson_dirs(err, jetson, nixos_root) < 0)
                 goto fail;
 
-        if (lookup_jetson_devices(err, jetson, root) < 0)
+        if (lookup_jetson_devices(err, jetson, root) < 0)
                 goto fail;
 
-        if (lookup_jetson_symlinks(err, jetson, root) < 0)
+        if (lookup_jetson_symlinks(err, jetson, nixos_root) < 0)
                 goto fail;
 
         rv = 0;
 
@@ -581,7 +589,7 @@ lookup_jetson(struct error *err, struct nvc_driver_info *info, const char *root)
                 if ((file_info->path = xstrdup(err, files[i])) == NULL)
                         goto fail;
 
-                if (parse_file(err, files[i], nixos_base, &file_info->info) < 0)
+                if (parse_file(err, files[i], root, nixos_base, &file_info->info) < 0)
                         goto fail;
 
                 if ((tmp = jetson_info_append(err, &file_info->info, dst)) == NULL)
