From 8025708bd3f055283403f6c1a7e1594a2e9d7831 Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Sat, 29 Jul 2023 17:51:11 +0100
Subject: [PATCH] last

---
 src/ldcache.c  | 42 ++++++++++++++----------------------------
 src/ldcache.h  |  2 +-
 src/nvc_info.c |  8 +++-----
 3 files changed, 18 insertions(+), 34 deletions(-)

diff --git a/src/ldcache.c b/src/ldcache.c
index 38bab05..b1174c8 100644
--- a/src/ldcache.c
+++ b/src/ldcache.c
@@ -108,40 +108,26 @@ ldcache_close(struct ldcache *ctx)
 
 int
 ldcache_resolve(struct ldcache *ctx, uint32_t arch, const char *root, const char * const libs[],
-    char *paths[], size_t size, ldcache_select_fn select, void *select_ctx)
+    char *paths[], size_t size, const char* version)
 {
         char path[PATH_MAX];
-        struct header_libc6 *h;
-        int override;
+        char dir[PATH_MAX];
+        char lib[PATH_MAX];
 
-        h = (struct header_libc6 *)ctx->ptr;
         memset(paths, 0, size * sizeof(*paths));
 
-        for (uint32_t i = 0; i < h->nlibs; ++i) {
-                int32_t flags = h->libs[i].flags;
-                char *key = (char *)ctx->ptr + h->libs[i].key;
-                char *value = (char *)ctx->ptr + h->libs[i].value;
-
-                if (!(flags & LD_ELF) || (flags & LD_ARCH_MASK) != arch)
+        for (size_t j = 0; j < size; ++j) {
+                snprintf(dir, 100, "/run/opengl-driver/lib");
+                if (!strncmp(libs[j], "libvdpau_nvidia.so", 100))
+                  strcat(dir, "/vdpau");
+                snprintf(lib, 100, "%s/%s.%s", dir, libs[j], version);
+                if (path_resolve_full(ctx->err, path, "/", lib) < 0)
+                  return (-1);
+                if (!file_exists(ctx->err, path))
                         continue;
-
-                for (size_t j = 0; j < size; ++j) {
-                        if (!str_has_prefix(key, libs[j]))
-                                continue;
-                        if (path_resolve(ctx->err, path, root, value) < 0)
-                                return (-1);
-                        if (paths[j] != NULL && str_equal(paths[j], path))
-                                continue;
-                        if ((override = select(ctx->err, select_ctx, root, paths[j], path)) < 0)
-                                return (-1);
-                        if (override) {
-                                free(paths[j]);
-                                paths[j] = xstrdup(ctx->err, path);
-                                if (paths[j] == NULL)
-                                        return (-1);
-                        }
-                        break;
-                }
+                paths[j] = xstrdup(ctx->err, path);
+                if (paths[j] == NULL)
+                        return (-1);
         }
         return (0);
 }
diff --git a/src/ldcache.h b/src/ldcache.h
index 33d78dd..2b087db 100644
--- a/src/ldcache.h
+++ b/src/ldcache.h
@@ -50,6 +50,6 @@ void ldcache_init(struct ldcache *, struct error *, const char *);
 int  ldcache_open(struct ldcache *);
 int  ldcache_close(struct ldcache *);
 int  ldcache_resolve(struct ldcache *, uint32_t, const char *, const char * const [],
-    char *[], size_t, ldcache_select_fn, void *);
+    char *[], size_t, const char*);
 
 #endif /* HEADER_LDCACHE_H */
diff --git a/src/nvc_info.c b/src/nvc_info.c
index 7e635dc..41499cd 100644
--- a/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -215,7 +215,7 @@ find_library_paths(struct error *err, struct nvc_driver_info *info, const char *
         if (info->libs == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB_ARCH, root, libs,
-            info->libs, info->nlibs, select_libraries, info) < 0)
+            info->libs, info->nlibs, info->nvrm_version) < 0)
                 goto fail;
 
         info->nlibs32 = size;
@@ -223,13 +223,11 @@ find_library_paths(struct error *err, struct nvc_driver_info *info, const char *
         if (info->libs32 == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB32_ARCH, root, libs,
-            info->libs32, info->nlibs32, select_libraries, info) < 0)
+            info->libs32, info->nlibs32, info->nvrm_version) < 0)
                 goto fail;
         rv = 0;
 
  fail:
-        if (ldcache_close(&ld) < 0)
-                return (-1);
         return (rv);
 }
 
@@ -243,7 +241,7 @@ find_binary_paths(struct error *err, struct nvc_driver_info *info, const char *r
         char path[PATH_MAX];
         int rv = -1;
 
-        if ((env = secure_getenv("PATH")) == NULL) {
+        if ((env = "/run/nvidia-docker/bin:/run/nvidia-docker/extras/bin") == NULL) {
                 error_setx(err, "environment variable PATH not found");
                 return (-1);
         }
-- 
2.38.5

